// <auto-generated />
using System;
using EFTestApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using AppContext = EFTestApp.Models.AppContext;

namespace EFTestApp.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20200827095443_AddedDefaultValues")]
    partial class AddedDefaultValues
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFTestApp.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("Manifacturer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Corporation");
                });

            modelBuilder.Entity("EFTestApp.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("EFTestApp.Models.Passport", b =>
                {
                    b.Property<string>("INN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("INN", "SerialNumber");

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("EFTestApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(18);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManifacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnName("FullName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassportInfoINN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassportInfoSerialNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("UsersPrimaryKey");

                    b.HasAlternateKey("Position");

                    b.HasIndex("ManifacturerId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[FullName] IS NOT NULL");

                    b.HasIndex("PassportInfoINN", "PassportInfoSerialNumber");

                    b.ToTable("Пользователь");
                });

            modelBuilder.Entity("EFTestApp.Models.User", b =>
                {
                    b.HasOne("EFTestApp.Models.Company", "Manifacturer")
                        .WithMany()
                        .HasForeignKey("ManifacturerId");

                    b.HasOne("EFTestApp.Models.Passport", "PassportInfo")
                        .WithMany()
                        .HasForeignKey("PassportInfoINN", "PassportInfoSerialNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
